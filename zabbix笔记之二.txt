zabbix自定义监控信息
通过命令收集信息
[root@zabbix_ser ~]# iostat |awk '/^sda/{print $2}'
3.15
配置监控项文件信息
cd /etc/zabbix/zabbix_agentd.d/
vim userparameter_mysql.conf   --配置模板

vim test.conf
UserParameter=tps,iostat |awk '/^sda/{print $2}'

centos6：/etc/zabbix/zabbix_agentd restart
centos7： systemctl restart zabbix_agentd.service 
测试
[root@zabbix_ser ~]# zabbix_get -s 172.16.1.205 -k tps
0.50

web页面添加自定义监控项信息




zabbix 设置触发器信息



监控项详细说明
       实现监控相应网络服务是否正常运行(监控服务端口信息)
	   zabbix_server -R config_cache_reload   --- 实现zabbix服务端快速收集信息功能
	
	   显示的监控信息 为 0 或 1  --- 布尔型
	   监控项配置信息说明
	   自定义时间间隔
	   a) 灵活: 指定不同时间段, 监控服务器收集信息的时间间隔
	   b) 调度: 类似定时任务功能, 指定在什么时间进行收集监控服务器信息
	   历史数据保留时长
	   保留收集到的数据时间长度
	   趋势存储时间
	   利用趋势时间可以更好的查看一段时间内的收集到的数据信息变化情况
       查看值
       监控收集到的信息, 进行解释说明
	   zabbix3.x 
	   存储值---差量变化(时间)--显示数据增长率
	   100M 
	   30s
	   300M

触发器详细说明







解决zabbix服务图形界面显示信息乱码问题
    1. httpd程序站点目录在哪
	   cd /usr/share/zabbix/
	2. 找和字符集有关的文件或目录
	   fonts
	   [root@zabbix-server zabbix]# cd fonts/
       [root@zabbix-server fonts]# ll
       total 0
       lrwxrwxrwx 1 root root 33 Oct 15 14:47 graphfont.ttf -> /etc/alternatives/zabbix-web-font
       [root@zabbix-server fonts]# ll /etc/alternatives/zabbix-web-font
       lrwxrwxrwx 1 root root 38 Oct 15 14:47 /etc/alternatives/zabbix-web-font -> /usr/share/fonts/dejavu/DejaVuSans.ttf
       [root@zabbix-server fonts]# ll /usr/share/fonts/dejavu/DejaVuSans.ttf
       -rw-r--r-- 1 root root 720012 Feb 27  2011 /usr/share/fonts/dejavu/DejaVuSans.ttf
       [root@zabbix-server fonts]# file /usr/share/fonts/dejavu/DejaVuSans.ttf
       /usr/share/fonts/dejavu/DejaVuSans.ttf: TrueType font data
    3. 修改调整zabbix默认字体文件
	   [root@zabbix-server fonts]# cd /usr/share/fonts/dejavu/
       [root@zabbix-server dejavu]# mv DejaVuSans.ttf{,.bak}
       [root@zabbix-server dejavu]# mv msyh.ttc DejaVuSans.ttf












默认键值
agent.hostname	客户端主机名。返回字符串
agent.ping	客户端可达性检查。返回 nothing - 不可达；1 - 可达
agent.version	zabbix客户端（agent）的版本。返回字符串
kernel.maxfiles	操作系统最大的文件打开数量。返回整数
kernel.maxproc	操作系统最大的进程数。返回整数
net.dns[<ip>,name,<type>,<timeout>,<count>,<protocol>]	检查 DNS 服务是否开启。返回 0 - DNS 服务关闭（服务未响应或DNS解析失败）；1 - DNS 服务开启
net.dns.record[<ip>,name,<type>,<timeout>,<count>,<protocol>]	执行DNS查询。返回字符串信息
net.if.collisions[if]	网络冲突数量。返回整型
net.if.in[if,<mode>]	网络接口上传流量统计。返回 整数
net.if.list	网络接口列表（包括接口类型，状态，IPv4地址，说明）。返回文本
net.if.out[if,<mode>]	上行流量统计。返回整数
net.if.total[if,<mode>]	网络接口上传下载的流量总和。返回整数
net.tcp.listen[port]	检查 TCP 端口 是否处于侦听状态。返回 0 - 未侦听；1 - 正在侦听
net.tcp.port[<ip>,port]	检查是否能建立 TCP 连接到指定端口。返回 0 - 不能连接；1 - 可以连接
net.tcp.service[service,<ip>,<port>]	检查服务是否运行并接受 TCP 连接。返回 0 - 服务关闭；1 - 服务运行
net.tcp.service.perf[service,<ip>,<port>]	检查 TCP 服务的性能，当服务 down 时返回 0，否则返回连接服务花费的秒数
net.udp.listen[port]	检查 UDP 端口 是否处于侦听状态。返回 0 - 未侦听；1 - 正在侦听
net.udp.service[service,<ip>,<port>]	检查服务是否运行并响应 UDP 请求。返回 0 - 服务关闭；1 - 服务运行
net.udp.service.perf[service,<ip>,<port>]	检查 UDP 服务的性能，当服务 down 时返回 0，否则返回连接到服务花费的秒数
perf_counter[counter,<interval>]	所有Windows计数器值。返回 整形、浮点、字符串、文本
proc.cpu.util[<name>,<user>,<type>,<cmdline>,<mode>,<zone>]	CPU进程百分比。返回浮点值
proc.mem[<name>,<user>,<mode>,<cmdline>,<memtype>]	进程内存，以字节为单位。返回整数
proc.num[<name>,<user>,<state>,<cmdline>]	进程数。返回整数
proc_info[process,<attribute>,<type>]	Various information about specific process(es). Returns float
sensor[device,sensor,<mode>]	硬件传感器读数。返回浮点型
service.info[service,<param>]	Information about a service. Returns integer with param as state, startup; string - with param as displayname, path, user; text - with param as description; Specifically for state: 0 - running, 1 - paused, 2 - start pending, 3 - pause pending, 4 - continue pending, 5 - stop pending, 6 - stopped, 7 - unknown, 255 - no such service; Specifically for startup: 0 - automatic, 1 - automatic delayed, 2 - manual, 3 - disabled, 4 - unknown
services[<type>,<state>,<exclude>]	列表服务。返回0表示空，如果是列表则是每行一个内容
system.boottime	系统启动时间。返回时间戳
system.cpu.intr	设备的中断数。返回整数
system.cpu.load[<cpu>,<mode>]	CPU 负载。返回浮点数
system.cpu.num[<type>]	CPU 数量，返回整数
system.cpu.switches	上下文的数量进行切换。它返回一个整数值。
system.cpu.util[<cpu>,<type>,<mode>]	CPU 使用率。返回浮点数
system.hostname[<type>]	系统主机名。返回字符串
system.hw.chassis[<info>]	机架信息。返回字符串
system.hw.cpu[<cpu>,<info>]	CPU 信息。返回字符串或整数
system.hw.devices[<type>]	PCI或者USB设备列表。返回文本
system.hw.macaddr[<interface>,<format>]	MAC地址。返回字符串
system.localtime[<type>]	系统时间。返回的是UTC整数。是服务器本地的时间
system.run[command,<mode>]	即在主机上指定的命令的执行。返回命令执行结果的文本值。如果指定NOWAIT的模式，这将返回执行命令的结果1。
system.stat[resource,<type>]	系统统计数据。返回整数值或者浮点值
system.sw.arch	软件架构信息。返回字符串
system.sw.os[<info>]	操作系统信息。返回字符串
system.sw.packages[<package>,<manager>,<format>]	安装包列表。返回文本
system.swap.in[<device>,<type>]	在交换分区(swap)（从设备到内存）统计数据。返回整数
system.swap.out[<device>,<type>]	交换分区（从内存到设备）的统计数据。返回整数
system.swap.size[<device>,<type>]	交换分区空间大小，字节或从总百分比。从字节返回整数;对于浮动比例
system.uname	识别系统。返回 字符串
system.uptime	系统启动时间。返回整数
system.users.num	已登录的用户数量，返回整数
vfs.dev.read[<device>,<type>,<mode>]	磁盘读取数据。类型是sectors, operations, bytes;返回整数，类型是 sps, ops, bps则返回浮点。
vfs.dev.write[<device>,<type>,<mode>]	磁盘写入数据。类型是sectors, operations, bytes;返回整数，类型是 sps, ops, bps则返回浮点。
vfs.dir.count[dir,<regex_incl>,<regex_excl>,<types_incl>,<types_excl>,<max_depth>,<min_size>,<max_size>,<min_age>,<max_age>]	Count of directory entries, recursively. Returns integer
vfs.dir.size[dir,<regex_incl>,<regex_excl>,<mode>,<max_depth>]	Directory size (in bytes). Returns integer
vfs.file.cksum[file]	文件效验，unix标准算法。返回整数
vfs.file.contents[file,<encoding>]	搜索文件内容。返回文本
vfs.file.exists[file]	检查文件是否存在。返回 0 - 未找到文件；1 - 常规文件或链接（软/硬）存在
vfs.file.md5sum[file]	文件的MD5校验。返回字符串（该文件的MD5哈希值）
vfs.file.regexp[file,regexp,<encoding>,<start line>,<end line>,<output>]	查找文件中的字符串，返回内容是被匹配内容的整行字符串，或者其他可选参数
vfs.file.regmatch[file,regexp,<encoding>,<start line>,<end line>]	查找文件中的字符串，如果有则返回1，没有则返回0。
vfs.file.size[file]	文件大小（单位bytes）。返回整数
vfs.file.time[file,<mode>]	文件事件信息，返回的是时间戳 整数
vfs.fs.inode[fs,<mode>]	数或inode的百分比。返回数字，如果是浮点则是百分比
vfs.fs.size[fs,<mode>]	磁盘容量。如果返回的是字节则是整数，如果返回的是百分比则是浮点。
vm.memory.size[<mode>]	从字节或总百分比的内存大小。它返回一个整数值，如果字节，只要百分比返回浮点值。
vm.vmemory.size[<type>]	虚拟空间大小（以字节计）或百分比（总计）。 返回整型字节; 浮点百分比
web.page.get[host,<path>,<port>]	获取网页。返回信息为网页源码或者TXT
web.page.perf[host,<path>,<port>]	全网页加载时间（秒）。返回浮点型
web.page.regexp[host,<path>,<port>,<regexp>,<length>,<output>]	查找网页中的字符串，返回内容是被匹配内容的整行字符串，或者其他可选参数
wmi.get[<namespace>,<query>]	执行 WMI 查询返回第一个对象。返回整形、浮点、字符串或者文本内容